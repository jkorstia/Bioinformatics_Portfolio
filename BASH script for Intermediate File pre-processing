#######################################################################################
#BASH script for Intermediate File pre-processing for Zoonomia TE Annotation pipeline
#Created by Jennifer Korstian
#Last Update September 7 2020
#######################################################################################

# This script was incorporated into a pipeline used in the David Ray lab at TTU for manually validating TE content in 200 Mammal genomes produced as part of the Zoonomia Consortium
# Brief overview of TE Annotation pipeline: Run repeat modeler (identify TEs in genome) -> validate repeat modeler output (Step 1: extract 50 most similar copies of the TE insertion from the genome and align, Step 2: manually trim non-element sequence from alignment, Step 3: generate consensus) -> repeat previous step until complete consensus can be generated for all elements.
# After the first round of manual TE validation is complete, this script generates consensus fasta sequences for each TE and prepares those consensuses for further processing (if the element is incomplete) or deposits consensus in the "complete" folder for later use.

# This script is designed to be used after a reorganizing script written by Kevin Sullivan.
#Find and replace jkorstia with your username in all these commands. 
#NOTE: This required that we were all using the same directory structure for each species (which we were already doing to streamline data sharing between lab members during this collaboration).


#######################################################################################
### Change file type to .fa (required for software utilized at a later step)
#######################################################################################

# These commands will rename all .fas files in the _alignments directories to .fa

cat /lustre/scratch/jkorstia/200mammals_rnd1/specieslist | while read i; do for f in /lustre/scratch/jkorstia/200mammals_rnd1/${i}/complete_alignments/*.fas; do mv -- "$f" "${f%.fas}.fa"; done; done
cat /lustre/scratch/jkorstia/200mammals_rnd1/specieslist | while read i; do for f in /lustre/scratch/jkorstia/200mammals_rnd1/${i}/incomplete_alignments/*.fas; do mv -- "$f" "${f%.fas}.fa"; done; done
cat /lustre/scratch/jkorstia/200mammals_rnd1/specieslist | while read i; do for f in /lustre/scratch/jkorstia/200mammals_rnd1/${i}/other_alignments/*.fas; do mv -- "$f" "${f%.fas}.fa"; done; done


#######################################################################################
### 	Create consensus file for incomplete and complete files
#######################################################################################
					
# this will automatically select all consensuses from the complete or incomplete folders 
# and put them into a single .fa file in the consensus file and prints out some sanity check statements as it goes

# NOTE: this requires that your new improved consensus contains "_cons" in the title- which all mine did by default. If not, you can modify the first grep command in this mess to fit your situation if your names are different (Sorry Austin)
# NOTE that it appends sequences to the consensus file, so if you need to run it again, delete the consensus files first
# NOTE: you may end up with more consensus sequences than input files if you had to create multiple consensuses for an alignment

# FOR INCOMPLETES
cat /lustre/scratch/jkorstia/200mammals_rnd1/specieslist| while read i; do awk '/^>/ {printf("\n%s\n",$0);next; } { printf("%s",$0);}  END {printf("\n");}' /lustre/scratch/jkorstia/200mammals_rnd1/${i}/incomplete_alignments/*.fa | grep -A 1 "_cons" >> /lustre/scratch/jkorstia/200mammals_rnd1/${i}/consensuses/${i}_incomplete_rnd1.fa; echo number of incomplete elements in ${i} is; ls /lustre/scratch/jkorstia/200mammals_rnd1/${i}/incomplete_alignments/*.fa | wc -l ; echo the number of sequences in the ${i} combined consensus file is; grep ">" /lustre/scratch/jkorstia/200mammals_rnd1/${i}/consensuses/${i}_incomplete_rnd1.fa| wc -l; done
# FOR COMPLETES
cat /lustre/scratch/jkorstia/200mammals_rnd1/specieslist| while read i; do awk '/^>/ {printf("\n%s\n",$0);next; } { printf("%s",$0);}  END {printf("\n");}' /lustre/scratch/jkorstia/200mammals_rnd1/${i}/complete_alignments/*.fa | grep -A 1 "_cons" >> /lustre/scratch/jkorstia/200mammals_rnd1/${i}/consensuses/${i}_complete_rnd1.fa; echo number of complete elements in ${i} is; ls /lustre/scratch/jkorstia/200mammals_rnd1/${i}/complete_alignments/*.fa | wc -l ; echo the number of sequences in the ${i} combined consensus file is; grep ">" /lustre/scratch/jkorstia/200mammals_rnd1/${i}/consensuses/${i}_complete_rnd1.fa| wc -l; done


#######################################################################################
### 	DEGAP consensus file 
#######################################################################################
# this sed command works only on lines that DO NOT CONTAIN ">" and will therefore not damage the headers.

cat specieslist | while read i; do sed -i '/^>/! s/-//g' /lustre/scratch/jkorstia/200mammals_rnd1/${i}/consensuses/${i}_complete_rnd1.fa; sed -i '/^>/! s/-//g' /lustre/scratch/jkorstia/200mammals_rnd1/${i}/consensuses/${i}_incomplete_rnd1.fa; done
